setup:
  font_path: "/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc" # !请根据你的系统修改!
  left_robot_ip: "192.168.188.200"
  right_robot_ip: "192.168.188.201"
  left_gripper_id: 9
  right_gripper_id: 9
  window_width: 800
  window_height: 400
  font_size: 18
  camera_serials:
    left_hand: "CP1Z84200072"
    right_hand: "CP1Z8420005H"
#    head: "CP1Z842000WD"
#    chest: "CL8NB4300WN"
  yolo_models:
    default: '/home/sage/Frank/code/dualarm_robot_project_1/software/config/best_bottle.pt'
#    bottle: '/home/sage/Frank/code/dualarm_robot_project_1/software/config/best_bottle.pt'
  calibration_files:
    left: "./calibration_yaml/config_left.yaml"  # 左臂手眼标定文件
    right: "./calibration_yaml/config_left.yaml" # 右臂手眼标定文件
reset_rpy_poses: # Renamed for clarity
  # --- 左臂 RPY 姿态 ---
  left_default: [180, 0, 180]          # 默认/Home RPY
  left_forward: [180, 0, 180]       # 示例: 工具Z轴向前 (Pitch 90)
  left_backward: [180, 0, 180]       # 示例: 工具Z轴向后 (Pitch -90)
  left_to_left: [180, 0, 180]      # 示例: 工具Z轴向左 (Yaw 90, from arm's perspective)
  left_to_right: [180, 0, 180]      # 示例: 工具Z轴向右 (Yaw -90)
  left_up: [180, 0, 180]     # 示例: 工具Z轴向上 (Roll -90, if Z is out from flange)
  left_down: [180, 0, 180]       # 示例: 工具Z轴向下 (Roll 90)

  # --- 右臂 RPY 姿态 ---
  right_default: [180, 0, 0]
  right_forward: [180, 0, 0]
  right_backward: [180, 0, 0]
  right_to_left: [180, 0, 0]
  right_to_right: [180, 0, 0]
  right_up: [180, 0, 0]
  right_down: [180, 0, 0]
# --- 新增: 音频文件路径映射 ---
audio_files:
  # 将下面的路径修改为你实际的 .wav 文件路径
  # 建议将文件放在脚本目录下的 audio 子文件夹中
  xyz_mode: "audio/xyz_mode.wav"
  rpy_mode: "audio/rpy_mode.wav"
  vision_enter: "audio/vision_enter.wav"
  vision_exit: "audio/vision_exit.wav" # 虽然代码没直接用 exit，但保留以备将来使用
  left_open: "audio/left_open.wav"
  left_close: "audio/left_close.wav"
  right_open: "audio/right_open.wav"
  right_close: "audio/right_close.wav"
  gripper_inactive: "audio/gripper_inactive.wav"
  system_ready: "audio/system_ready.wav"
  reset_mode: "audio/reset_mode.wav"
  # 回正成功/失败的语音反馈
  left_reset_success: "audio/left_reset_success.wav"   # (新增) 左臂回正成功语音
  left_reset_fail: "audio/left_reset_fail.wav"
  right_reset_success: "audio/right_reset_success.wav" # (新增) 右臂回正成功语音
  right_reset_fail: "audio/right_reset_fail.wav"


# 手柄控制配置文件
controls:
  # --- Vision Mode Specific Controls ---
  vision_start_record: { type: button, index: 3 } # 示例: 手柄 X 键 (Pygame 通常按钮索引 2)
  vision_stop_record_confirm: { type: button, index: 4 } # 示例: 手柄 Y 键 (Pygame 通常按钮索引 3)
  vision_cancel_record: { type: button, index: 0 } # 示例: 手柄 A 键 (Pygame 通常按钮索引 0)

  # ... (保持之前的 controls 部分不变) ...
  # --- Movement Controls ---
  xyz_left_arm_x_pos: { type: hat, index: 0, axis: y, direction: -1 }
  xyz_left_arm_x_neg: { type: hat, index: 0, axis: y, direction: 1 }
  xyz_left_arm_y_pos: { type: hat, index: 0, axis: x, direction: 1 }
  xyz_left_arm_y_neg: { type: hat, index: 0, axis: x, direction: -1 }
  xyz_left_arm_z_pos: { type: button, index: 4 } # LB
  xyz_left_arm_z_neg: { type: axis, index: 2, threshold: 0.1, direction: 1 } # LT

  xyz_right_arm_x_pos:  { type: button, index: 3 } # Y
  xyz_right_arm_x_neg: { type: button, index: 0 } # A
  xyz_right_arm_y_pos: { type: button, index: 2 } # X
  xyz_right_arm_y_neg: { type: button, index: 1 } # B
  xyz_right_arm_z_pos: { type: button, index: 5 } # RB
  xyz_right_arm_z_neg: { type: axis, index: 5, threshold: 0.1, direction: 1 } # RT

  rpy_left_arm_roll_pos: { type: hat, index: 0, axis: x, direction: 1 }
  rpy_left_arm_roll_neg: { type: hat, index: 0, axis: x, direction: -1 }
  rpy_left_arm_pitch_pos: { type: hat, index: 0, axis: y, direction: -1 }
  rpy_left_arm_pitch_neg: { type: hat, index: 0, axis: y, direction: 1 }
  rpy_left_arm_yaw_pos: { type: button, index: 4 } # LB
  rpy_left_arm_yaw_neg: { type: axis, index: 2, threshold: 0.1, direction: 1 } # LT

  rpy_right_arm_roll_pos: { type: button, index: 1 } # B
  rpy_right_arm_roll_neg: { type: button, index: 2 } # X
  rpy_right_arm_pitch_pos: { type: button, index: 0 } # A
  rpy_right_arm_pitch_neg: { type: button, index: 3 } # Y
  rpy_right_arm_yaw_pos: { type: button, index: 5 } # RB
  rpy_right_arm_yaw_neg: { type: axis, index: 5, threshold: 0.1, direction: 1 } # RT

  # --- Shared Controls (All Modes) ---
  gripper_toggle_left: { type: button, index: 9 }  # R3
  gripper_toggle_right: { type: button, index: 10 } # Guide (可能无效!)
  speed_decrease: { type: button, index: 6 } # Back 按钮 减速
  speed_increase_alt: { type: button, index: 7 } # Back 按钮 减速

  # --- Mode Switching ---
  mode_switch_button: { type: button, index: 8 } # Start 按钮

  # 左臂回正按钮

  reset_left_arm_default_rpy: { type: axis, index: 2, threshold: 0.1, direction: 1 } # LT
  reset_left_arm_forward_rpy: { type: hat, index: 0, axis: y, direction: -1 }
  reset_left_arm_backward_rpy: { type: hat, index: 0, axis: y, direction: 1 }
  reset_left_arm_to_left_rpy: { type: hat, index: 0, axis: x, direction: 1 }
  reset_left_arm_to_right_rpy: { type: hat, index: 0, axis: x, direction: -1 }
  reset_left_arm_up_rpy:  { type: button, index: 4 } # LB
  reset_left_arm_down_rpy:  { type: axis, index: 2, threshold: 0.1, direction: 1 } # LT

  # 右臂回正按钮
  reset_right_arm_default_rpy: { type: axis, index: 5, threshold: 0.1, direction: 1 } # RT
  reset_right_arm_forward_rpy: { type: button, index: 3 }
  reset_right_arm_backward_rpy: { type: button, index: 0 }
  reset_right_arm_to_left_rpy: { type: button, index: 2 }
  reset_right_arm_to_right_rpy: { type: button, index: 1 }
  reset_right_arm_up_rpy: { type: button, index: 5 }
  reset_right_arm_down_rpy: { type: axis, index: 5, threshold: 0.1, direction: 1 } # RT


# 速度和通用设置
settings:
  # ... (保持之前的 settings 部分不变) ...
  initial_xy_speed: 40.0
  initial_z_speed: 30.0
  rpy_speed: 20.0
  speed_increment: 5.0
  min_speed: 5.0
  max_speed: 100.0
  long_press_duration: 0.8
  acc: 100
  arot: 10
  t: 0.1
  trigger_threshold: 0.1
  gripper_speed: 150
  gripper_force: 100
  # 新增回正模式速度 (可以使用 moveByJoint，这里只用于 jog 的默认速度映射，如果需要)
  reset_speed: 50 # 回正运动的速度